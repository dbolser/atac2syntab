
# To perform assembly to assembly alignment, I've had good results
# with the Assembly to Assembly Comparison (ATAC) tool. The tool is
# described here:

# http://seqanswers.com/wiki/ATAC
# http://goo.gl/pnMJ7 # Getting Started with ATAC


# To get ATAC, you need to download the whole kmer project from SVN:
#   svn co https://kmer.svn.sourceforge.net/svnroot/kmer/trunk kmer


# You will need to install the python devel package (to provide the
# required 'include/Pyhton.h' file). Everything seems to have
# configured and built correctly (using make instead of the requested
# 'gmake' in the above 'Getting Started' instructions).



# SHELL SCRIPT TO RUN ATAC

# SETUP
export ATACDIR=/path/to/atac
export GENOMEDIR=/tmp/ATAC

mkdir -p $GENOMEDIR


# The two assembly versions... 
export AV1=av1.fasta
export AV2=av2.fasta


# FIRST WE 'FLATTEN' THE FASTA SEQUENCES
$ATACDIR/bin/leaff -f $AV1 -W > $GENOMEDIR/$(basename $AV1)
$ATACDIR/bin/leaff -f $AV2 -W > $GENOMEDIR/$(basename $AV2)


# AND FINALLY...
perl $ATACDIR/bin/atac.pl \
  -meryldir  $GENOMEDIR/meryl \
  -dir       $GENOMEDIR \
  -id1 AV1 -seq1 $GENOMEDIR/$(basename $AV1) \
  -id2 AV2 -seq2 $GENOMEDIR/$(basename $AV2)



# The important files are the 'uids'...
cp $GENOMEDIR/*.uids ./Results

# Specifically, this one:
CLUMP="./Results/AV1vsAV2.ref=AV1.clumpCost=5000.atac.uids"



# It's a simple matter to convert these files into GFF3 or SYNTAB
# format, and I wrote the following two Perl scripts to perform the
# task:

atac2gff.plx
atac2syntab.plx



# Count the number of 'clumps'
grep -c '^M c ' $CLUMP


# Make GBSyn SYNTAB
./atac2syntab.plx --s1 av1 --s2 av2 \
    $CLUMP > some.syntab

wc -l some.syntab # Should match



# Make GFF

# This scrit relies on files containing the sequence lengths to
# format the alignments as easy to read chromosomal percentages.

export X=$AV1
export X=$AV2

perl -e '
  use Bio::SeqIO;
  $so=Bio::SeqIO->
    new(-format => "fasta", -file => $ENV{"X"});
  while($s=$so->next_seq){
    print $s->id, "\t", $s->length, "\n";
  }
' > $X.len


# I've hardcoded the locations of these files in the scrit ... sigh.

./atac2gff.plx $CLUMP > some.gff

wc -l some.gff # Should match


